<<<Lesson 1>>>
Note: كل قواعد الأس كيو أل تكتب أحرف كبيرة
1 - CREATE DATABASE name_of_database ===> Create DataBase
2 - DROP DATABASE name_of_database ===> Drop DataBase
3 - CREATE TABLE name_of_table (column1 typeit, column2 typeit, ...) ===> Create Table With Columns
Type Of Values You Storage It In Column:
INT(11) ===> Integer
VARCHAR(255) ===> String
LONGTEXT ===> Long String Containts (1023) Characters
TINYINT(1) ===> Boolean
TIMESTAMP ===> Time
DATE ===> Date
DATETIME ===> Data+Time
YEAR(4) ===> Year
CHAR(1) ===> One Character
BLOB ===> File 64(KB)
MEDIUMBLOB ===> File 16(MB)
LONGBLOB ===> File 40(MB)
JSON ===> Data Json

<<<Lesson 2>>>
1 - ALTER TABLE name_of_table ADD name_column type_column ===> Add New Column To Table
2 - ALTER TABLE name_of_table ADD (name_column1 type_column1, name_column2 type_column2, ... ...) ===> Add Many Columns To Table
3 - ALTER TABLE name_of_table DROP name_of_column ===> Delete Column In Table
4 - DROP TABLE name_of_table ===> For Delete Table In DataBase

<<<Lesson 3>>>
1 - INSERT INTO name_of_table (column1, column2, ...) VALUES (value1, value2, ...) ===> Add Data To Table
2 - SELECT * FROM name_of_table ===> Show All Data From Table
3 - SELECT column1, column2, ... FROM name_of_table ===> Show Data From Table
4 - SELECT * FROM name_of_table WHERE field1 = value, ... ===> Show Data By Condition
Conditions is:
OR AND != <> > < >= <= BETWEEN
5 - SELECT * FROM name_of_table WHERE id BETWEEN 10 AND 29 ===> Show Data By Between Condition
6 - DELETE FROM name_of_table WHERE id = 12 OR name_emplyee = "Mohamed Nour" ===> Delete Record From Table By Condition
7 - DELETE FROM name_of_table ===> Delete All Data
8 - UPDATE name_of_table SET column1 = newValue, column2 = newValue, ... WHERE any condition ===> Update Record Data In Table

<<<Lesson 4>>>
Type Of Constraint:
1 - Null ===> أي أن هذا الحقل يمكن أن يكون فارغ
2 - Not Null ===> أي أن هذا الحقل لا يمكن أن يكون فارغ
Example1:
-CREATE TABLE A (id INT(11) NOT NULL, name VARCHAR(255) NULL)
3 - PRIMARY KEY ===> مفتاح رئيسي يكون فريد أي لايمكن تكرار قيمته وليس فارغ
PRIMARY KEY ===> UNIQUE + NOT NULL
Example1:
-CREATE TABLE table (id int(11) NOT NULL, PRIMARY KEY(id)) ===> Table Has Column Primary Key
-ALTER TABLE name_of_table DROP PRIMARY KEY ===> Remove PRIMARY KEY From Table Has Created
-ALTER TABLE name_of_table ADD CONSTRAINT name_constraint PRIMARY KEY(column1, column2, ...) ===> Add Primary Key For Table Created
-ALTER TABLE name_of_table ADD PRIMARY KEY (Column1, Column2, ...) ===> Add Primary Key For Table Created
4 - FOREIGN KEY ===> مفتاح ثانوي يربط الجداول ببعض ويعزز الوصول للبيانات
Example1:
-CREATE TABLE one (
	id_one int(11),
	name varchar(255),
	primary key (id_one)
)
-CREATE TABLE two (
	id_two int(11),
	id_one int(11),
	primary key(id_two),
	foreign key (id_one) references one(id_one)
)
Example2:
-ALTER TABLE name_of_table1 ADD CONSTRAINT name_of_constraint FOREIGN KEY (column1) REFERENCES name_of_table2(column1)
ON DELETE CASCADE ON UPDATE CASCADE ===> For Create Foreign Key On Table Created Before
-ALTER TABLE name_of_table1 DROP CONSTRAINT name_of_constraint

<<<Lesson 5>>>
1 - INNER JOIN ===> For Extract Data From Two Or Three Or ... Tables <([ Foreign Key - Primary Key ])>
Example1:
-SELECT * FROM t1 INNER JOIN t2 ON t1.id_t2 = t2.id_t2
-SELECT * FROM t1 INNER JOIN t2 ON ForeignKey = PrimaryKey
-SELECT * FROM t1 INNER JOIN t2 ON t1.id_t2 = t2.id_t2 WHERE t1.id = 10
-SELECT emplyee.name_emplyee, job.name_job FROM emplyee 
INNER JOIN job ON emplyee.id_two = job.id_job 
WHERE emplyee.name_emplyee = "Mohamed Nour Abdo"
2 - ORDER BY ===> For Order The Results By Ascending OR Descending
Note (important): Always Write 
- SELECT
- FROM
- WHERE
- GROUP BY
- ORDER BY name_of_field
- LIMIT + OFFSET
Example:
-SELECT * FROM T1 ORDER BY T1.name_emplyee
3 - AS ===> For Change Name Of Column In Table During Browser Data
Example:
-SELECT id_emplyee AS Number_Of_Emplyee FROM emplyee
4 - GROUP BY ===> It is Functions You Use It When Show Data
--- COUNT(x) ===> عدد الأسطر
--- SUM(x)   ===> جمع القيم
--- AVG(x)   ===> معدل جمع القيم
--- MAX(x)   ===> يعطيك أكبر قيمة
--- MIN(x)   ===> يعطيك أصغر قيمة
Example:
-SELECT MIN(price) FROM products
-SELECT COUNT(price) FROM products WHERE name_products = "apple"
-SELECT COUNT(price) FROM products GROUP BY name_products
5 - LIKE "%" ===> For Get Data By Near Letter Or Word
Forms:
LIKE "a%" ===> Start With a
LIKE "%a" ===> End With a
LIKE "%a%" ===> Contain With a
LIKE "_a%" ===> Second Letter is a
LIKE "a_%" ===> First Letter is a And Length Of Word Two Letter A little
LIKE "a__%" ===> First Letter is a And Length Of Word is Three Or More
LIKE "a%0" ===> Start With a And End With 0
Example:
-SELECT * FROM emplyee WHERE name_emplyee LIKE "M%d" ===> Mohamed

<<<Lesson 6>>>
1 - LIMIT Number ===> لتحديد عدد الأسطر المراد اخراجها
2 - OFFSET Number ===> طباعة الأسطر ابتداء من السطر الكذا
Example:
-SELECT * FROM t1 LIMIT 10 OFFSET 5
-SELECT * FROM t1 ORDER BY id_emplyee DESC LIMIT 10 OFFSET 5
-SELECT * FROM t1 ORDER BY id_emplyee DESC LIMIT 10, 5 ===> For Merge Limit With Offset In One Statement
3 - DISTINCT name_field ===> إخراج بيانات غير متكررة تستخدم مع عمود واحد لمرة واحدة
Example:
-SELECT DISTINCT name_product FROM products

<<<Lesson 7>>>
1 - GROUP BY ===> For Order Or Group Results By One Column
NOTE: Use Sum Functions With GROUP BY
Usages:
---1 - For Order Results
-SELECT * FROM job GROUP BY name_job DESC|ASC ===> For Order Results
-SELECT * FROM job GROUP BY name_job ORDER BY price DESC
---2 - For Group Results
Example:
-SELECT COUNT(id) FROM emplyee GROUP BY name_emplyee
-SELECT COUNT(emplyee.id_emplyee), job.name_job, job.id_job AS Number_Job
 FROM emplyee 
 RIGHT JOIN job ON emplyee.id_two = job.id_job
 GROUP BY job.id_job
-SELECT COUNT(id), name from emplyee GROUP BY name
2 - Time ===> All You Need To Know In Time & Date
-SELECT CURRENT_DATE() Or SELECT CURRENT_DATE ===> For Get Date
-SELECT CURRENT_TIME() Or SELECT CURRENT_TIME ===> For Get Time
-SELECT CURRENT_TIMESTAMP() Or SELECT CURRENT_TIMESTAMP Or SELECT NOW() ===> For Get Full TimeZone
3 - Control With Time And Date For Show Data Use This INTERVAL
Example:
-SELECT * FROM t1 WHERE date >= CURRENT_DATE - INTERVAL 1 MONTH - INTERVAL 10 DAY
 ===> For Get Data Last 40 DAYS
-SELECT * FROM t1 WHERE time >= NOW() - INTERVAL 90 MINUTE AND date = CURRENT_DATE()
 ===> Get Data From 1:30 Hours
4 - JOIN ===> Technique For Get Data From Tables RelationShip With Them
 ===> JOIN === INNER JOIN
Example:
-SELECT user.name, posts.content, comment.content
 FROM comment JOIN user ON comment.user_id = user.id
 JOIN posts ON comment.post_id = post.id
 ===> For Get Data From Three Or More Table RelationShip With Them
5 - LEFT OUTER JOIN | LEFT JOIN , RIGHT OUTER JOIN | RIGHT JOIN , FULL OUTER JOIN
Example:
-SELECT * FROM users LEFT OUTER JOIN posts ON users.id = posts.id_user
-SELECT * FROM users RIGHT OUTER JOIN posts ON users.id = posts.id_user
-SELECT * FROM users FULL OUTER JOIN posts ON users.id = posts.id_user
6 - Comments in SQL-MySQL ===> For Comment
---1
--sapce....
---2
/* 
	Multine Comments
*/

<<<Lesson 8>>>
1 - IN (Value1, Value2, ....)
Example:
-SELECT * FROM t1 WHERE column1 IN (1, 2, 3, 4) ===> For Get Data By Values In ()
-SELECT * FROM t1 WHERE column1 NOT IN (1, 2, 3, 4) ===> For Get Data That Not Equals Values In ()
2 - Arithmetic Operators ===> * / + - %
Example:
-SELECT salary/30 AS Day_Salary FROM emplyee
3 - FORMAT(VALUE, Number Of Numbers After point 3.123123)
Example:
-SELECT FORMAT(salary/30, 2) AS Day_Salary FROM emplyee
4 - Methods For Data And Time
---1 - DAY("2025-01-12") ===> 12
---2 - MONTH("2025-01-12") ===> 01
---3 - YEAR("2025-01-12") ===> 2025
---4 - HOUR("10:03:31") ===> 10
---5 - MINUTE("10:03:31") ===> 03
---6 - SECOND("10:03:31") ===> 31
5 - دمج جدولين مع بعض في جدول واحد
Example:
-INSERT INTO t1 SELECT * FROM t2 ===> Merge (t2) in (t1)
Note: إذا وجد تكرار يجب حذفها أو حذف المفتاح الرئيسي برايمري كي
Note: يجب أن يمتلكا الجدولان نفس البنية الهيكلية للأعمدة والمفاتيح